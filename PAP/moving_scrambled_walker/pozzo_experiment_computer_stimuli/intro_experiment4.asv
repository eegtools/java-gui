%this is the introduction to the experiment, written from scratch

clear all 
close all
cd('C:\Documents and Settings\BMILab\My Documents\MATLAB\Alejo\pozzo_experiment')

try
    ListenChar(2);
    load stimuli_pozzo4
    delta_y_scramble2=-50;
    flipSpdback = 0;
    flipSpdwindow = 0;
    black = [0 0 0];
    red = [200 50 50];
    white = [255 255 255];
    green=[10 255 10];
    dot_size = 4;
    stimulus_time=4.4; %time of presentation for each stimulus in seconds
    intro_time=2;    %time of the red fixation cross  at the beginning of the experimental block
    isi_time=2; %inter stimulus time in seconds
    green_time=0.25; %time in seconds of the color changing of odd stimuli
    trans_matrix=repmat([0;delta_y_scramble2],1,size(scramble2,2));
    
    N_type_stim=3;
    N_stimuli=12;
    A=1:N_type_stim;
    B=repmat(A,1,N_stimuli/N_type_stim);
    permutation=randperm(N_stimuli);
    Presentation=B(permutation);
    
    odd_stimuli=[3 5 10];%[3 10 14 27 35 40];
    questions=[7 11];%[7 17 34 41];
    
    rec = Screen('Rect',0);
    [W, H]=Screen('WindowSize', 0);
    [window, rect] = Screen('OpenWindow', 0, black, rec);
    monitorFlipInterval = Screen('GetFlipInterval', window);
    Screen('TextSize', window ,30);
    monitor_freq = 1/monitorFlipInterval;
    stimulus_frames=ceil(monitor_freq*stimulus_time);%number of frames corresponding to
                                                     %stimulus_time seconds
    
    intro_frames=round(monitor_freq*intro_time); %analogous to stimulus_frames
    isi_frames=round(monitor_freq*isi_time);
    green_frames=round(monitor_freq*green_time);
    possible_start=stimulus_frames-green_frames;
    
    %----CROCE----------------------------------------------------
    cross_center = [W/2-12 W/2+12 W/2 W/2; H/2 H/2 H/2-12 H/2+12];
    %-------------------------------------------------------------
    
    HideCursor;
    cont_training='1';
    while strcmp(cont_training,'1')
    [nx ny textbounds] = DrawFormattedText(window,char(strcat('Thank you for participating in our experiment!', ...
       ' Press any key to watch the three different kinds of videos that you are going to see during the experiment.')) ,'center','center',white, 45 ,[],[],1.5);
%     Screen('DrawText', window, 'Wellcome to our experiment. Press any key to continue.', W/2-300 , H/2-100, white); 
    Screen('Flip',window);
    WaitSecs(2);
    KbWait;
    
    answer='y';
    while strcmp(answer,'y')
        for i=1:intro_frames
            Screen('DrawLines', window, cross_center, 3, red);
            Screen('Flip', window);
        end
        [nx ny textbounds] = DrawFormattedText(window,'Video #1' ,'center','center',white,60,[],[],1.5);

%     Screen('DrawText', window, 'Video #1', W/2 , H/2-100, white); 
    Screen('Flip',window);
    WaitSecs(2);
    %FAI VEDERE IL WALKER
    for i=1:stimulus_frames 
        Screen('DrawLines', window, cross_center, 3, red);
        Screen('FillOval', window, white, round([squeeze(walker(:,:,i))+0 - dot_size ; squeeze(walker(:,:,i)) + 0 + dot_size]));
        Screen('Flip', window);
    end
    
[nx ny textbounds] = DrawFormattedText(window,'Video #2' ,'center','center',white,60,[],[],1.5);
    Screen('Flip',window);
    WaitSecs(2);
    %FAI VEDERE LO SCRAMBLE NORMALE
    for i=1:stimulus_frames 
        Screen('DrawLines', window, cross_center, 3, red);
        Screen('FillOval', window, white, round([squeeze(scramble(:,:,i))+0 - dot_size ; squeeze(scramble(:,:,i)) + 0 + dot_size]));
        Screen('Flip', window);
    end
[nx ny textbounds] = DrawFormattedText(window,'Video #3' ,'center','center',white,60,[],[],1.5);
    Screen('Flip',window);
    WaitSecs(2);
    %FAI VEDERE LO SCRAMBLE CINEMATICO
    for i=1:stimulus_frames %1+shift_gait*scrambleshift(scramblenb):stimulus_frames+shift_gait*scrambleshift(scramblenb)
        Screen('DrawLines', window, cross_center, 3, red);
        Screen('FillOval', window, white, round([squeeze(scramble2(:,:,i))+trans_matrix - dot_size ; squeeze(scramble2(:,:,i)) + trans_matrix+ dot_size]));
        Screen('Flip', window);
    end
[nx ny textbounds] = DrawFormattedText(window,'Would you like to watch the videos again? (y/n)' ,'center','center',white,60,[],[],1.5);
    Screen('Flip',window);
    ch='l';
    FlushEvents;
    while ~ismember(ch,['y' 'n'])
        [ch , when]=GetChar(0,0);
    end
    answer=ch;
    end
    
%     answer='y';
%     while strcmp(answer,'y')
text_x_trans=500;
text_y_trans=50;
starting_y=5; 
%     Screen('DrawText', window, 'During the experiment, you will see a succession of these three kinds of videos in a random way.', W/2-text_x_trans , H/2-starting_y*text_y_trans, white); 
%     Screen('DrawText', window, 'The experiment will be divided into blocks of 30 videos each, with 10 seconds of pause between videos. ', W/2-text_x_trans , H/2-(starting_y-1)*text_y_trans, white); 
%     Screen('DrawText', window, 'Once in a while, the dots of the animations will change color for a very short time.  ', W/2-text_x_trans , H/2-(starting_y-2)*text_trans_y, white);   
%     Screen('DrawText', window, 'You must remember WHICH of the videos (#1, #2, or #3) was the LAST one that changed color. After a few animations, ', W/2-text_x_trans , H/2+(starting_y-3)*text_y_trans, white); 
%     Screen('DrawText', window, 'or maybe right away, we will ask you which animation was the LAST one that changed color. You will have to give  ', W/2-text_x_trans , H/2+(starting_y-4)*text_y_trans, white); 
%     Screen('DrawText', window, 'your answer by using keys number 1, 2 and 3. If your answer is correct, the experiment goes on. If not, the experiment', W/2-text_x_trans , H/2+(starting_y-5)*text_y_trans, white);
%     Screen('DrawText', window, 'will be interrupted, and the block will be repeated.', W/2-text_x_trans , H/2+(starting_y-6)*text_y_trans, white);
%     Screen('DrawText', window, 'IMPORTANT: during the whole experiment, KEEP YOUR GAZE FIXATING THE RED CROSS IN THE CENTER OF THE SCREEN', W/2-text_x_trans , H/2+(starting_y-7)*text_y_trans, white); 
%     Screen('DrawText', window,'Are you ready to start a training block? Press any key to continue.' ,W/2-text_x_trans,H/2+(starting_y-8)*text_y_trans,white,[],[],[1]);
%     [nx ny textbounds] = DrawFormattedText(window,char(strcat('tua sorellakkkkkkkkkkkkkkkkkkkkkkkk kkkkkkkkkkkkkkk kkkkkkkkkkkkkkkkkkkk kkkkkkkkkkkk kkkkkkkkkkkk kkkkkkkkkkkkk', ...
%         ' è proprio bona')),'center', 'center',white);    
%[nx ny textbounds] = DrawFormattedText(window,   ,'center','center',white,60,[],[],1.5);
[nx ny textbounds] = DrawFormattedText(window, char(strcat('During the experiment, you will see a succession of these three kinds of videos in a random way. ', ...
' Once in a while, the dots of the animations will change color for a very short time. ', ...   
' You must remember WHICH of the videos (#1, #2, or #3) was the LAST one that changed color. We will ask you which animation was the LAST one that changed color. ', ...  
' If your answer is correct, the experiment goes on. If not, the experiment    ', ...
' will be interrupted, and the block will be repeated.' , ...
' IMPORTANT: during the whole experiment,' , ... 
'KEEP YOUR GAZE FIXATING THE RED CROSS IN THE CENTER OF THE SCREEN   ' , ...
' Are you ready to start a training block? Press any key to continue.' )),'center','center',white,45,[],[],1.5);
% [normBoundsRect, offsetBoundsRect] = Screen('TextBounds', window,'Are you ready to start a training block? Press any key to continue.' ,W/2-text_x_trans,H/2+(starting_y-8)*text_y_trans,[1]);
    Screen('Flip',window);
    WaitSecs(.2);
    KbWait;
    
    
    
    
    %TRAINING SESSION STARTS
    
    stimulusnb=0;
    wrong_answer=0;
while wrong_answer==0

    for iter = Presentation
     stimulusnb=stimulusnb+1;
        for i=1:isi_frames 
                        Screen('DrawLines', window, cross_center, 3, red);
                        Screen('Flip', window); 
                        
        end
        switch iter
            case 1
%                 walkernb=walkernb+1;
%                 %                 initial_frame=floor(rand(1)*(tot_frames-stimulus_frames));
%                 phase_fr=1+(walkernb-1)*6; 
%                 mean_init_x=mean(walker(1,:,phase_fr),2);
%                 translation_x=[round(W/4-mean_init_x) ; 0];
                if  ismember(stimulusnb,odd_stimuli)
%                     initialframe=ceil(rand(1)*(stimulus_frames-green_frames-1));
                    last_odd_stimulus='1';
                    
                    start_green=floor(rand(1)*possible_start);
%                     putvalue(dio,4)
                    for i=1:stimulus_frames                         
                        Screen('DrawLines', window, cross_center, 3, red);
                        if i-start_green>=0 && i-start_green<green_frames
                        Screen('FillOval', window, green, round([squeeze(walker(:,:,i))+0 - dot_size ; squeeze(walker(:,:,i)) + 0 + dot_size]));  
                        else
                        Screen('FillOval', window, white, round([squeeze(walker(:,:,i))+0 - dot_size ; squeeze(walker(:,:,i)) + 0 + dot_size]));  
                        end
                            
                        Screen('Flip', window);           
                    end
                    
                else
%                     putvalue(dio,1)
                    for i=1:stimulus_frames %1+shift_gait*walkershift(walkernb):stimulus_frames+shift_gait*walkershift(walkernb) 
                        Screen('DrawLines', window, cross_center, 3, red);
                        Screen('FillOval', window, white, round([squeeze(walker(:,:,i))+0 - dot_size ; squeeze(walker(:,:,i)) + 0 + dot_size]));
                        Screen('Flip', window);
                    end
                    

                end
                case 2
%                 scramblenb=scramblenb+1;
%                 phase_fr=1+(scramblenb-1)*6; 
%                 mean_init_x=mean(scramble(1,:,phase_fr),2);
%                 translation_x=[round(W/4-mean_init_x) ; 0];
                if  ismember(stimulusnb,odd_stimuli)
                    
                    last_odd_stimulus='2';
                    start_green=floor(rand(1)*possible_start);
%                     putvalue(dio,5)
                    for i=1:stimulus_frames 
                        Screen('DrawLines', window, cross_center, 3, red);
                        if i-start_green>=0 && i-start_green<green_frames
                        Screen('FillOval', window, green, round([squeeze(scramble(:,:,i))+0 - dot_size ; squeeze(scramble(:,:,i))+0 + dot_size]));  
                        else
                        Screen('FillOval', window, white, round([squeeze(scramble(:,:,i))+0 - dot_size ; squeeze(scramble(:,:,i))+0 + dot_size]));  
                        end                            
                        Screen('Flip', window);           
                    end
                else        
%                     putvalue(dio,2)
                    for i=1:stimulus_frames %1+shift_gait*scrambleshift(scramblenb):stimulus_frames+shift_gait*scrambleshift(scramblenb) 
                        Screen('DrawLines', window, cross_center, 3, red);
                        Screen('FillOval', window, white, round([squeeze(scramble(:,:,i))+0 - dot_size ; squeeze(scramble(:,:,i))+0 + dot_size]));
%                         Screen('FillOval', window, white, round([squeeze(scramble(:,:,Indexes(i))) - dot_size ; squeeze(scramble(:,:,Indexes(i))) + dot_size]));
%                         Screen('FillOval', window, red, round([squeeze(inv_scramble2(:,test_markers(1),randomframes(1,i))) - dot_size ; squeeze(inv_scramble2(:,test_markers(1),randomframes(1,i))) + dot_size]));
%                         
%                         Screen('FillOval', window, red, round([squeeze(inv_scramble2(:,test_markers(2),randomframes(2,i))) - dot_size ; squeeze(inv_scramble2(:,test_markers(2),randomframes(2,i))) + dot_size]));
%                         Screen('FillOval', window, red, round([squeeze(inv_scramble2(:,test_markers(3),randomframes(3,i))) - dot_size ; squeeze(inv_scramble2(:,test_markers(3),randomframes(3,i))) + dot_size]));
%                         Screen('FillOval', window, red, round([squeeze(inv_scramble2(:,test_markers(4),randomframes(4,i))) - dot_size ; squeeze(inv_scramble2(:,test_markers(4),randomframes(4,i))) + dot_size]));
                        Screen('Flip', window);
%                         if flag_record_avi
%                             %ANIM = getframe(rec_fig,[Lx Ly W-2*Lx H-2*Ly]);
%                             ANIM = getframe(rec_fig);
%                             mov = addframe(mov,ANIM);
%                         end
                    end
                   
                    end
                
            case 3
%                 anklesnb=anklesnb+1;
%                 phase_fr=1+(anklesnb-1)*6; 
%                 mean_init_x=mean(ankles(1,:,phase_fr),2);
%                 translation_x=[round(W/4-mean_init_x) ; 0];
                
                if  ismember(stimulusnb,odd_stimuli)
                    
                    last_odd_stimulus='3';
                    start_green=floor(rand(1)*possible_start);
%                     putvalue(dio,6)
                    for i=1:stimulus_frames 
                        Screen('DrawLines', window, cross_center, 3, red);
                        if i-start_green>=0 && i-start_green<green_frames
                        Screen('FillOval', window, green, round([squeeze(scramble2(:,:,i))+repmat([0;delta_y_scramble2],1,size(scramble2,2))- dot_size ; squeeze(scramble2(:,:,i)) + repmat([0;delta_y_scramble2],1,size(scramble2,2))+ dot_size]));  
                        else
                        Screen('FillOval', window, white, round([squeeze(scramble2(:,:,i))+repmat([0;delta_y_scramble2],1,size(scramble2,2)) - dot_size ; squeeze(scramble2(:,:,i)) + repmat([0;delta_y_scramble2],1,size(scramble2,2))+ dot_size]));  
                        end                            
                        Screen('Flip', window);           
                    end
                else             
                
%                 putvalue(dio,3)
                    for i=1:stimulus_frames %1+shift_gait*scrambleshift(scramblenb):stimulus_frames+shift_gait*scrambleshift(scramblenb) 
                        Screen('DrawLines', window, cross_center, 3, red);
                        Screen('FillOval', window, white, round([squeeze(scramble2(:,:,i))+repmat([0;delta_y_scramble2],1,size(scramble2,2)) - dot_size ; squeeze(scramble2(:,:,i)) + repmat([0;delta_y_scramble2],1,size(scramble2,2))+ dot_size]));
                        Screen('Flip', window); 
%                         if flag_record_avi
%                             %ANIM = getframe(rec_fig,[Lx Ly W-2*Lx H-2*Ly]);
%                             ANIM = getframe(rec_fig);
%                             mov = addframe(mov,ANIM);
%                         end
                    end
                end
%                 case 4
%                 bouncernb=bouncernb+1;
%                 phase_fr=1+(bouncernb-1)*6; 
%                 mean_init_x=mean(bouncer(1,:,phase_fr),2);
%                 translation_x=[round(W/4-mean_init_x) ; 0];
%                 
%                 if  ismember(stimulusnb,odd_stimuli)
%                     
%                     last_odd_stimulus='0';
%                     start_green=floor(rand(1)*possible_start);
%                     
%                     putvalue(dio,8)
%                     for i=1:stimulus_frames 
%                         Screen('DrawLines', window, cross_center, 3, red);
%                         if i-start_green>=0 && i-start_green<green_frames
%                         Screen('FillOval', window, green, round([squeeze(bouncer(:,:,i)) + 0 - dot_size ; squeeze(bouncer(:,:,i)) + 0 + dot_size]));  
%                         else
%                         Screen('FillOval', window, white, round([squeeze(bouncer(:,:,i)) + 0 - dot_size ; squeeze(bouncer(:,:,i)) + 0 + dot_size]));  
%                         end                            
%                         Screen('Flip', window);           
%                     end
%                 else    
%                 
%                 putvalue(dio,4)
%                     for i=1:stimulus_frames %1+shift_gait*scrambleshift(scramblenb):stimulus_frames+shift_gait*scrambleshift(scramblenb) 
%                         Screen('DrawLines', window, cross_center, 3, red);
%                         Screen('FillOval', window, white, round([squeeze(bouncer(:,:,i))+ 0 - dot_size ; squeeze(bouncer(:,:,i)) + 0+ dot_size]));
%                         Screen('Flip', window);
%                     end
%                 end
        end
        %part devoted to posing the question, if that is the case
        if ismember(stimulusnb,questions)
            if stimulusnb==N_stimuli
                disp('I arrived here')
            end
            
            Screen('DrawLines', window, cross_center, 3, red);
            %[nx ny textbounds] = DrawFormattedText(window,        ,'center','center',white,60,[],[],1.5);
            [nx ny textbounds] = DrawFormattedText(window,     char(strcat('Which was the last animation that changed color?', ... 
               ' Press 1, 2, or 3 to give your answer.')), 'center','center',white,45,[],[],1.5);

%             Screen('DrawText', window, 'Which was the last animation that changed color?' , W/2-300 , H/2-100, white);
%             Screen('DrawText', window, 'Press 1, 2, or 3 to give your answer.' , W/2-300 , H/2+100, white);
            Screen('Flip', window);
            ch='l';
            FlushEvents
            while ~ismember(ch,['1' '2' '3'])
            [ch , when]=GetChar(0,0);
            end
            if last_odd_stimulus==ch
                Screen('Flip',window);
                Screen('DrawLines', window, cross_center, 3, red);
                [nx ny textbounds] = DrawFormattedText(window,    'You gave the right answer! Press spacebar to continue.'    ,'center','center',white,45,[],[],1.5);
%                 Screen('DrawText', window, 'You gave the right answer! Press spacebar to continue.' , W/2-300 , H/2-100, white); 
                Screen('Flip',window);
                WaitSecs(.2);
                KbWait; 
            else
                wrong_answer=1;
                Screen('Flip',window);
                Screen('DrawLines', window, cross_center, 3, red);
                [nx ny textbounds] = DrawFormattedText(window,     'You gave a wrong answer. Press any key to finish this block.'   ,'center','center',white,45,[],[],1.5);
%                 Screen('DrawText', window, 'You gave a wrong answer. Press any key to finish this block.' , W/2-500 , H/2-100, white);
                Screen('Flip',window);
                WaitSecs(.2);
                KbWait;
            end
        end
          if wrong_answer
              break
          end
        if stimulusnb==N_stimuli
            wrong_answer=1;
            break
        end
        
 end
    
end  
[nx ny textbounds] = DrawFormattedText(window,char(strcat('Would you like to see the sample videos again (press 1),', ...
' or you want to quit this training session (press 9)?'))   ,'center','center',white,45,[],[],1.5);
Screen('Flip',window);
WaitSecs(.2);
ch='q';
FlushEvents
while ~ismember(ch,['1' '9'])
    [ch , when]=GetChar(0,0);
end
if ch=='9'
    break
else
    cont_training='1';
end
end


sca
ListenChar(0);
    
catch
    Screen('CloseAll');
    ale = lasterror(psychlasterror);
    ale    
    ListenChar(0);
    
end